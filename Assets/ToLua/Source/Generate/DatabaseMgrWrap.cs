//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DatabaseMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DatabaseMgr), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("ClearAllData", ClearAllData);
		L.RegFunction("ClearTmpData", ClearTmpData);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("_cacheDelegate", get__cacheDelegate, set__cacheDelegate);
		L.RegVar("Inst", get_Inst, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAllData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DatabaseMgr obj = (DatabaseMgr)ToLua.CheckObject<DatabaseMgr>(L, 1);
			obj.ClearAllData();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearTmpData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DatabaseMgr obj = (DatabaseMgr)ToLua.CheckObject<DatabaseMgr>(L, 1);
			obj.ClearTmpData();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__cacheDelegate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DatabaseMgr obj = (DatabaseMgr)o;
			LoadTableDelegate ret = obj._cacheDelegate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _cacheDelegate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Inst(IntPtr L)
	{
		try
		{
			ToLua.Push(L, DatabaseMgr.Inst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__cacheDelegate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DatabaseMgr obj = (DatabaseMgr)o;
			LoadTableDelegate arg0 = (LoadTableDelegate)ToLua.CheckDelegate<LoadTableDelegate>(L, 2);
			obj._cacheDelegate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _cacheDelegate on a nil value");
		}
	}
}

