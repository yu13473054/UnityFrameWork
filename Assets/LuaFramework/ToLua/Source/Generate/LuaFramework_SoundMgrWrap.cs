//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaFramework_SoundMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaFramework.SoundMgr), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("PlaySound", PlaySound);
		L.RegFunction("StopSound", StopSound);
		L.RegFunction("PlayBgm", PlayBgm);
		L.RegFunction("StopBgm", StopBgm);
		L.RegFunction("PauseBgm", PauseBgm);
		L.RegFunction("ResumeBgm", ResumeBgm);
		L.RegFunction("GetBgmTime", GetBgmTime);
		L.RegFunction("IsBgmPlaying", IsBgmPlaying);
		L.RegFunction("ReleaseAllClipRefrence", ReleaseAllClipRefrence);
		L.RegFunction("Mute", Mute);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("DownloadSongsList", get_DownloadSongsList, set_DownloadSongsList);
		L.RegVar("Inst", get_Inst, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			LuaFramework.SoundMgr.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlaySound(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				int o = obj.PlaySound(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3)
			{
				LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				int o = obj.PlaySound(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4)
			{
				LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				int o = obj.PlaySound(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaFramework.SoundMgr.PlaySound");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopSound(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.StopSound(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.StopSound(arg0);
				return 0;
			}
			else if (count == 3)
			{
				LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				obj.StopSound(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaFramework.SoundMgr.StopSound");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayBgm(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.PlayBgm(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopBgm(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
			obj.StopBgm();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PauseBgm(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
			obj.PauseBgm();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResumeBgm(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
			obj.ResumeBgm();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBgmTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
			float o = obj.GetBgmTime();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsBgmPlaying(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
			bool o = obj.IsBgmPlaying();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReleaseAllClipRefrence(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
			obj.ReleaseAllClipRefrence();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Mute(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)ToLua.CheckObject<LuaFramework.SoundMgr>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Mute(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DownloadSongsList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)o;
			System.Collections.Generic.List<string> ret = obj.DownloadSongsList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DownloadSongsList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Inst(IntPtr L)
	{
		try
		{
			ToLua.Push(L, LuaFramework.SoundMgr.Inst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DownloadSongsList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaFramework.SoundMgr obj = (LuaFramework.SoundMgr)o;
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			obj.DownloadSongsList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DownloadSongsList on a nil value");
		}
	}
}

